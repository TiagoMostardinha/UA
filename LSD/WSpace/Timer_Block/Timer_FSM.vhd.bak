library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity Timer_FSM is
generic(N : positive := 4)
port( clk : in std_logic;
		new_time : in std_logic;
		timer_value : in std_logic_vector(3 downto 0);
		timer_en : in std_logic;
		timer_exp : out std_logic;
		count : out std_logic_vector(3 downto 0));
end Timer_FSM;

architecture Behavorial of Timer_FSM is
signal  s_count : unsigned(3 downto 0);

begin
	process(clk)
	begin
		if rising_edge(clk) then 
			if new_time = '1' then
				s_count <= unsigned(timer_value);
				timer_exp <= '0';
			elsif (timer_en = '1') and (s_count /= 0) then
				s_count <= s_count - 1;
				timer_exp <= '0';
			elsif(s_count = '0') then
				timer_exp <= '1';
			end if;
		end if;
	end process;
	count <= std_logic_vector(s_count);

end Behavorial;