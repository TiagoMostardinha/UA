.s	float
.d	double
.w	inteiro

abs.p 	$t1, $t1		#Absolute value
neg.p	$t1, $t1		#Negative
div.p	$t1, $t1, $t2		#Divide
mul.p	$t1, $t1, $t2		#Multiply
add.p	$t1, $t1, $t2		#Addition
sub.p	$t1, $t1, $t2		#Subtract

cvt.d.s	$t1, $t1		#Convert Float to Double		
cvt.d.w	$t1, $t1		#Convert Intenger to Double
cvt.s.d	$t1, $t1		#Convert Double to Float
cvt.s.w	$t1, $t1		#Convert Intenger to Float
cvt.w.d	$t1, $t1		#Convert Double to Intenger
cvt.w.s	$t1, $t1		#Convert Float to Intenger´

mtc1	CPUrc, FPdst		#Move to Coprocessor 1
mfc1	CPUdst, FPsrc		#Move from Coprocessor 1
mov.p	FPdst, FPsrc		#Move from FPsrc to FPdst

l.p	FPdst, offset(CPUreg)	#Load from Memory
s.p	FPdst, offset(CPUreg)	#Store into Memory

c.eq.p	FPUreg1, FPUreg2	#equal
c.lt.p	FPUreg1, FPUreg2	#less than
c.le.p	FPUreg1, FPUreg2	#less or equal than
bclt	label			#branch if true
bclf	label			#branch if false

Em rotinas os float's e os doubles chegam da rotina em $f0, e é necessario passar á rotina em $ f12 


$f0($f1) ... $f2($f3) Cálculo de expressões e valor de retorno das funções.
$f4($f5) ... $f10($f11) Geral (não são preservados pelas funções)
$f12($f13) ... $f14($f15) Passagem de parâmetros para funções.
$f16($f17) ... $f18($f19) Geral (não são preservados pelas funções)
$f20($f21) ... $f30($f31) Geral (não podem ser alterados pelas funções)
