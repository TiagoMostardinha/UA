// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "12/10/2021 10:51:26"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module CmpSignedDemo (
	yout,
	ai,
	bi,
	yi,
	zout,
	xi,
	zi,
	xout);
output 	yout;
input 	ai;
input 	bi;
input 	yi;
output 	zout;
input 	xi;
input 	zi;
output 	xout;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \yout~output_o ;
wire \zout~output_o ;
wire \xout~output_o ;
wire \yi~input_o ;
wire \ai~input_o ;
wire \bi~input_o ;
wire \inst10~combout ;
wire \xi~input_o ;
wire \zi~input_o ;
wire \inst7~0_combout ;
wire \inst11~combout ;


cycloneive_io_obuf \yout~output (
	.i(\inst10~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\yout~output_o ),
	.obar());
// synopsys translate_off
defparam \yout~output .bus_hold = "false";
defparam \yout~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \zout~output (
	.i(\inst7~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\zout~output_o ),
	.obar());
// synopsys translate_off
defparam \zout~output .bus_hold = "false";
defparam \zout~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \xout~output (
	.i(\inst11~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\xout~output_o ),
	.obar());
// synopsys translate_off
defparam \xout~output .bus_hold = "false";
defparam \xout~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \yi~input (
	.i(yi),
	.ibar(gnd),
	.o(\yi~input_o ));
// synopsys translate_off
defparam \yi~input .bus_hold = "false";
defparam \yi~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \ai~input (
	.i(ai),
	.ibar(gnd),
	.o(\ai~input_o ));
// synopsys translate_off
defparam \ai~input .bus_hold = "false";
defparam \ai~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \bi~input (
	.i(bi),
	.ibar(gnd),
	.o(\bi~input_o ));
// synopsys translate_off
defparam \bi~input .bus_hold = "false";
defparam \bi~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (\yi~input_o  & (\ai~input_o  $ (!\bi~input_o )))

	.dataa(\yi~input_o ),
	.datab(\ai~input_o ),
	.datac(\bi~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst10~combout ),
	.cout());
// synopsys translate_off
defparam inst10.lut_mask = 16'h8282;
defparam inst10.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \xi~input (
	.i(xi),
	.ibar(gnd),
	.o(\xi~input_o ));
// synopsys translate_off
defparam \xi~input .bus_hold = "false";
defparam \xi~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \zi~input (
	.i(zi),
	.ibar(gnd),
	.o(\zi~input_o ));
// synopsys translate_off
defparam \zi~input .bus_hold = "false";
defparam \zi~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = (\ai~input_o  & ((\xi~input_o ) # ((!\bi~input_o )))) # (!\ai~input_o  & (((\zi~input_o  & !\bi~input_o ))))

	.dataa(\ai~input_o ),
	.datab(\xi~input_o ),
	.datac(\zi~input_o ),
	.datad(\bi~input_o ),
	.cin(gnd),
	.combout(\inst7~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst7~0 .lut_mask = 16'h88FA;
defparam \inst7~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb inst11(
// Equation(s):
// \inst11~combout  = (\xi~input_o ) # ((\ai~input_o  & (\yi~input_o  & !\bi~input_o )))

	.dataa(\xi~input_o ),
	.datab(\ai~input_o ),
	.datac(\yi~input_o ),
	.datad(\bi~input_o ),
	.cin(gnd),
	.combout(\inst11~combout ),
	.cout());
// synopsys translate_off
defparam inst11.lut_mask = 16'hAAEA;
defparam inst11.sum_lutc_input = "datac";
// synopsys translate_on

assign yout = \yout~output_o ;

assign zout = \zout~output_o ;

assign xout = \xout~output_o ;

endmodule
